/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.modern.instancer.gui;

import com.modern.instancer.data.WorkshiftParentChildTree;
import com.modern.instancer.data.Workshift;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author kevinlawrence
 */
public class WorkshiftParentChildManagerPanel extends javax.swing.JPanel {

    private WorkshiftParentChildTree workshiftParentChildTree;

    private void createTestInstanceData() {
        workshiftParentChildTree = new WorkshiftParentChildTree();
        workshiftParentChildTree.setName("Test Data - Part XYZ-123");

        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P100", new Workshift("G54.1P111", "G54.1P100", false));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P100", new Workshift("G54.1P112", "G54.1P100", false));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P100", new Workshift("G54.1P113", "G54.1P100", false));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P100", new Workshift("G54.1P114", "G54.1P100", false));

        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P200", new Workshift("G54.1P211", "G54.1P200", false));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P200", new Workshift("G54.1P212", "G54.1P200", false));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P200", new Workshift("G54.1P213", "G54.1P200", true));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P200", new Workshift("G54.1P214", "G54.1P200", true));

        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P250", new Workshift("G54.1P251", "G54.1P250", true));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P250", new Workshift("G54.1P252", "G54.1P250", true));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P250", new Workshift("G54.1P253", "G54.1P250", false));
        workshiftParentChildTree.addWorkshiftParentAndChild("G54.1P250", new Workshift("G54.1P254", "G54.1P250", false));
    }

    private boolean loadInstanceData() {
        if (workshiftParentChildTree != null) {
            DefaultMutableTreeNode root = new DefaultMutableTreeNode(workshiftParentChildTree.getName());
            DefaultTreeModel tm = new DefaultTreeModel(root);

            workshiftParentChildTree.getWorkshiftParentChildTree().keySet().stream().forEachOrdered((workshiftIDParent) -> {
                //add the instance node to the jtree
                DefaultMutableTreeNode parentNode = new DefaultMutableTreeNode(workshiftIDParent);
                root.add(parentNode);

                //add the offsets below the current node
                workshiftParentChildTree.getWorkshiftParentChildTree().get(workshiftIDParent).getWorkshiftIDsSorted().stream().forEachOrdered((workshiftIDChild) -> {
                    DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(workshiftIDChild);
                    parentNode.add(childNode);
                });
            });

            jtreeWorkshiftParentChild.setModel(tm);
        }

        jtreeWorkshiftParentChild.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        return true;
    }

    /**
     * Creates new form InstanceManagerPanel
     */
    public WorkshiftParentChildManagerPanel() {
        initComponents();

        createTestInstanceData();
        loadInstanceData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnlInstanceTree = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtreeWorkshiftParentChild = new javax.swing.JTree();

        jScrollPane1.setViewportView(jtreeWorkshiftParentChild);

        javax.swing.GroupLayout jpnlInstanceTreeLayout = new javax.swing.GroupLayout(jpnlInstanceTree);
        jpnlInstanceTree.setLayout(jpnlInstanceTreeLayout);
        jpnlInstanceTreeLayout.setHorizontalGroup(
            jpnlInstanceTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        jpnlInstanceTreeLayout.setVerticalGroup(
            jpnlInstanceTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlInstanceTree, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlInstanceTree, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnlInstanceTree;
    private javax.swing.JTree jtreeWorkshiftParentChild;
    // End of variables declaration//GEN-END:variables
}
