/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.modern.instancer.gui;

import com.modern.instancer.data.Workshift;
import java.awt.event.WindowEvent;
import com.modern.instancer.data.WorkshiftListProviderIntf;

/**
 *
 * @author kevinlawrence
 */
public final class WorkshiftEditorFrame extends javax.swing.JFrame {
    
//<editor-fold defaultstate="collapsed" desc="Properties">

    private Workshift offset;
    private WorkshiftListProviderIntf offsetListProvider;

    /**
     * @return the offset
     */
    public Workshift getOffset() {
        return offset;
    }

    /**
     * @param offset the offset to set
     */
    public void setOffset(Workshift offset) {
        this.offset = offset;
        updateOffsetDisplay();
    }

    /**
     * @param offsetListProvider the offsetListProvider to set
     */
    public void setOffsetListProvider(WorkshiftListProviderIntf offsetListProvider) {
        this.offsetListProvider = offsetListProvider;
        updateOffsetListDisplay();
    }
//</editor-fold>
    
//<editor-fold defaultstate="collapsed" desc="Data Update Methods">
    public void updateOffsetListNavigation() {
        jbtnPreviousOriginalOffset.setEnabled(jcbxOriginalOffset.getItemCount() > 0);
        jbtnNextOriginalOffset.setEnabled(jcbxOriginalOffset.getItemCount() > 0);
        
        //TODO: remove out later
        jbtnPreviousOriginalOffset.setVisible(false);
        jbtnNextOriginalOffset.setVisible(false);
    }
    
    public void updateOffsetListDisplay() {
        //setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbxOriginalOffset.removeAllItems();
        
        if (offsetListProvider != null) {
            offsetListProvider.getWorkshiftIDsSorted().stream().forEachOrdered(offsetID -> jcbxOriginalOffset.addItem(offsetID));
        }
        updateOffsetListNavigation();
    }
    
    public void updateOffsetDisplay() {
        jtxtBaseName.setText("");
        jcbx180DegreeRotation.setSelected(false);
        
        if (offset != null) {
            this.setTitle(offset.getWorkshiftID());
            
            jtxtBaseName.setText(offset.getNameBase());
            jspinInstance.setValue(offset.getInstance());
            jcbx180DegreeRotation.setSelected(offset.isRotate180Degrees());
        }
    }
    
    public void updateOffsetData() {
        if (offset != null) {
            offset.setNameBase(jtxtBaseName.getText());
            offset.setInstance((int) jspinInstance.getValue());
            offset.setRotate180Degrees(jcbx180DegreeRotation.isSelected());
            
            //TODO... do we even want to allow this?
            //offset.setParentOffsetID((String) jcbxOriginalOffset.getSelectedItem());
        }
    }
//</editor-fold>
    
    /**
     * Creates new form OffsetInstanceEditorFrame
     */
    public WorkshiftEditorFrame(Workshift offset) {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        this.offset = offset;
        
        updateOffsetListNavigation();
        updateOffsetDisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnlLogo = new javax.swing.JPanel();
        jlblModernLogo = new javax.swing.JLabel();
        jpnlOffsetEditor = new javax.swing.JPanel();
        jpnlOriginalOffset = new javax.swing.JPanel();
        lblOriginalOffset = new javax.swing.JLabel();
        jcbxOriginalOffset = new javax.swing.JComboBox<>();
        jbtnPreviousOriginalOffset = new javax.swing.JButton();
        jbtnNextOriginalOffset = new javax.swing.JButton();
        jpnlOffsetInstance = new javax.swing.JPanel();
        jlblOffsetInstanceID = new javax.swing.JLabel();
        jtxtBaseName = new javax.swing.JTextField();
        jcbx180DegreeRotation = new javax.swing.JCheckBox();
        jspinInstance = new javax.swing.JSpinner();
        jpnlControls = new javax.swing.JPanel();
        jbtnAccept = new javax.swing.JButton();
        jbtnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Offset Editor");

        jpnlLogo.setBackground(new java.awt.Color(0, 153, 255));

        jlblModernLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/modern/instancer/gui/modern_engineering.png"))); // NOI18N

        javax.swing.GroupLayout jpnlLogoLayout = new javax.swing.GroupLayout(jpnlLogo);
        jpnlLogo.setLayout(jpnlLogoLayout);
        jpnlLogoLayout.setHorizontalGroup(
            jpnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlLogoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jlblModernLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpnlLogoLayout.setVerticalGroup(
            jpnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlLogoLayout.createSequentialGroup()
                .addComponent(jlblModernLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblOriginalOffset.setText("Parent (Main) Offset ID");

        jcbxOriginalOffset.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtnPreviousOriginalOffset.setText("<");
        jbtnPreviousOriginalOffset.setToolTipText("Previous Original Offset");

        jbtnNextOriginalOffset.setText(">");
        jbtnNextOriginalOffset.setToolTipText("Next Original Offset");

        javax.swing.GroupLayout jpnlOriginalOffsetLayout = new javax.swing.GroupLayout(jpnlOriginalOffset);
        jpnlOriginalOffset.setLayout(jpnlOriginalOffsetLayout);
        jpnlOriginalOffsetLayout.setHorizontalGroup(
            jpnlOriginalOffsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlOriginalOffsetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOriginalOffset, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbxOriginalOffset, 0, 362, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnPreviousOriginalOffset, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnNextOriginalOffset, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpnlOriginalOffsetLayout.setVerticalGroup(
            jpnlOriginalOffsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlOriginalOffsetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlOriginalOffsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOriginalOffset)
                    .addComponent(jcbxOriginalOffset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnNextOriginalOffset)
                    .addComponent(jbtnPreviousOriginalOffset))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnlOffsetInstance.setForeground(new java.awt.Color(255, 255, 255));

        jlblOffsetInstanceID.setText("Base / Instance ID");

        jcbx180DegreeRotation.setText("180 Rotation?");

        jspinInstance.setModel(new javax.swing.SpinnerNumberModel(1, 1, 300, 1));

        javax.swing.GroupLayout jpnlOffsetInstanceLayout = new javax.swing.GroupLayout(jpnlOffsetInstance);
        jpnlOffsetInstance.setLayout(jpnlOffsetInstanceLayout);
        jpnlOffsetInstanceLayout.setHorizontalGroup(
            jpnlOffsetInstanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlOffsetInstanceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblOffsetInstanceID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(jtxtBaseName, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspinInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbx180DegreeRotation, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpnlOffsetInstanceLayout.setVerticalGroup(
            jpnlOffsetInstanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlOffsetInstanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jlblOffsetInstanceID)
                .addComponent(jtxtBaseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jcbx180DegreeRotation)
                .addComponent(jspinInstance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jbtnAccept.setText("Accept");
        jbtnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAcceptActionPerformed(evt);
            }
        });

        jbtnCancel.setText("Cancel");
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlControlsLayout = new javax.swing.GroupLayout(jpnlControls);
        jpnlControls.setLayout(jpnlControlsLayout);
        jpnlControlsLayout.setHorizontalGroup(
            jpnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlControlsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnAccept))
        );
        jpnlControlsLayout.setVerticalGroup(
            jpnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlControlsLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(jpnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnAccept)
                    .addComponent(jbtnCancel)))
        );

        javax.swing.GroupLayout jpnlOffsetEditorLayout = new javax.swing.GroupLayout(jpnlOffsetEditor);
        jpnlOffsetEditor.setLayout(jpnlOffsetEditorLayout);
        jpnlOffsetEditorLayout.setHorizontalGroup(
            jpnlOffsetEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlOriginalOffset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpnlOffsetInstance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpnlControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpnlOffsetEditorLayout.setVerticalGroup(
            jpnlOffsetEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlOffsetEditorLayout.createSequentialGroup()
                .addComponent(jpnlOriginalOffset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlOffsetInstance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpnlControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpnlOffsetEditor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnlLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlOffsetEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAcceptActionPerformed
        updateOffsetData();
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jbtnAcceptActionPerformed

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        setVisible(false);
        dispose();
//        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jbtnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(WorkshiftEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(WorkshiftEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(WorkshiftEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(WorkshiftEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new WorkshiftEditorFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnAccept;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnNextOriginalOffset;
    private javax.swing.JButton jbtnPreviousOriginalOffset;
    private javax.swing.JCheckBox jcbx180DegreeRotation;
    private javax.swing.JComboBox<String> jcbxOriginalOffset;
    private javax.swing.JLabel jlblModernLogo;
    private javax.swing.JLabel jlblOffsetInstanceID;
    private javax.swing.JPanel jpnlControls;
    private javax.swing.JPanel jpnlLogo;
    private javax.swing.JPanel jpnlOffsetEditor;
    private javax.swing.JPanel jpnlOffsetInstance;
    private javax.swing.JPanel jpnlOriginalOffset;
    private javax.swing.JSpinner jspinInstance;
    private javax.swing.JTextField jtxtBaseName;
    private javax.swing.JLabel lblOriginalOffset;
    // End of variables declaration//GEN-END:variables
}
